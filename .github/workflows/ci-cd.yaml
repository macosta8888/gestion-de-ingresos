name: CI/CD
on: [push]
env:
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  Build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/test'
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install Dependencies
        run: bun install
      - name: Cache Node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/bun.lock') }}
      - name: Run prisma generate
        run: bunx prisma generate
      - name: Build
        run: bun run build
  Test:
    needs: Build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/test'
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Cache Node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/bun.lock') }}
  Deploy-Dev:
    needs: Test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --token=${{ secrets.VERCEL_TOKEN }}
      - name: Trigger Vercel deployment
        run: vercel deploy --no-wait --token=${{ secrets.VERCEL_TOKEN }}
  Deploy-Test:
    needs: Test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/test'
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --token=${{ secrets.VERCEL_TOKEN }}
      - name: Trigger Vercel deployment
        run: vercel deploy --no-wait --token=${{ secrets.VERCEL_TOKEN }}
  Deploy-Production:
    runs-on: ubuntu-latest
    needs: Test
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --token=${{ secrets.VERCEL_TOKEN }}
      - name: Trigger Vercel deployment
        run: vercel deploy --prod --no-wait --token=${{ secrets.VERCEL_TOKEN }}
